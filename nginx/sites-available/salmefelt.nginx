##
# Server config file for Salmefelt
##

server {
	listen 80;
	listen [::]:80;
	server_name salmefelt.com www.salmefelt.com;
	return 302 https://$server_name$request_uri;
}

server {
	# SSL configuration
	listen 443 ssl;
	listen [::]:443 ssl;
	include snippets/ssl-salmefelt.com.conf;
	include snippets/ssl-params.conf;

	# Root folder location (where and what to serve)
	root /home/truu/salmefelt/frontend/build;

	# Add index.php to the list if you are using PHP
	index /index.html;

	# Name of the server, the first one in the list is the default.
	server_name salmefelt.com www.salmefelt.com;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	location ^~ /static/admin/ {
		alias /home/truu/salmefelt/backend/static/admin/;
		gzip_static on;
		expires off;
	}

	location ^~ /images/ {
		alias /home/truu/salmefelt/backend/media/images/;
		gzip_static on;
		expires off;
		# try_files /home/truu/salmefelt/backend/media/images/$uri =404;
	}

	location ^~ /CACHE/ {
		alias /home/truu/salmefelt/backend/media/CACHE/;
		gzip_static on;
		expires off;
	}

	location ~ /(api|admin) {
		client_max_body_size 20M;
		proxy_set_header Cache-Control no-cache;
		proxy_pass http://localhost:8000;
		proxy_bind $server_addr;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto https;
	}

	# Webroot plugin places a special file in `/.well-known` dir in document root.
	# Used by Let's Encrypt for validation.
	location ~ /.well-known {
		allow all;
	}

	location = /service-worker.js {
		add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
		access_log off;
		expires off;
		proxy_no_cache 1;
	}

	access_log /var/log/nginx/beta.salmefelt.com_access.log;
	error_log /var/log/nginx/beta.salmefelt.com_errors.log;
}
